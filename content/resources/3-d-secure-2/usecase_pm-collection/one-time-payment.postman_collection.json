{
	"info": {
		"_postman_id": "929b40d7-3c3d-4ac9-9e62-c8b1a0112f1c",
		"name": "one-time-payment",
		"description": "One-time purchase is one of the most common scenarios: a consumer places an order for a product or service. The merchant fulfills the order in a single shipment and before expiration of the authorization.\r\n\r\na. Immediately\r\n\ti. Authentication (full amount)\r\n\tii. Purchase (full amount)\r\n\r\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1.2.a.i.1 Check Enrollment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var xml2JsonData = xml2Json(responseBody);\r",
							"\r",
							"var xml = cheerio.load(responseBody, {\r",
							"  ignoreWhitespace: true,\r",
							"  xmlMode: true\r",
							"});\r",
							"\r",
							"pm.globals.set(\"$p_guwid_enroll\", xml(\"payment\").find(\"transaction-id\").text());\r",
							"pm.globals.set(\"$pareq\", xml(\"payment\").find(\"three-d\").find(\"pareq\").text());\r",
							"pm.globals.set(\"$acs_url\", xml(\"payment\").find(\"three-d\").find(\"acs-url\").text());\r",
							"\r",
							"console.info(\"Check Enrollment GUWID: \"+xml(\"payment\").find(\"transaction-id\").text());\r",
							"console.info(\"PAREQ: \"+xml(\"payment\").find(\"three-d\").find(\"pareq\").text());\r",
							"console.info(\"ACS-URL: \"+xml(\"payment\").find(\"three-d\").find(\"acs-url\").text());\r",
							"\r",
							"var $status=xml(\"payment\").find(\"transaction-state\").text();\r",
							"\r",
							"pm.test(\"Check Enrollment\", function(){\r",
							"    pm.expect($status).to.equal(\"success\"); \r",
							"});\r",
							"\r",
							"pm.test(\"Check Enrollment Transaction ID: \"+pm.globals.get(\"$p_guwid_enroll\"), function(){\r",
							"    pm.expect(pm.globals.get(\"$p_guwid_enroll\")).not.equal(null);\r",
							"});\r",
							"\r",
							"pm.test(\"ACS-URL: \"+pm.globals.get(\"$acs_url\"), function(){\r",
							"    pm.expect(pm.globals.get(\"$acs_url\")).not.equal(null);\r",
							"});\r",
							"\r",
							"pm.test(\"PAREQ: \"+pm.globals.get(\"$pareq\"), function(){\r",
							"        pm.expect(pm.globals.get(\"$pareq\")).not.equal(null);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var guid = (function() {",
							"  function s4() {",
							"    return Math.floor((1 + Math.random()) * 0x10000)",
							"               .toString(16)",
							"               .substring(1);",
							"  }",
							"  return function() {",
							"    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +",
							"           s4() + '-' + s4() + s4() + s4();",
							"  };",
							"})();",
							"",
							"pm.globals.set(\"$descriptor\", \"3DS-2 Use-Cases: One-Time Purchase - Simplified\");",
							"pm.globals.set(\"$guid\", guid());",
							"console.info(\"UUID: \"+pm.globals.get(\"$guid\"));",
							"",
							"",
							"pm.globals.set(\"$p_guwid\", null);",
							"pm.globals.set(\"$p_guwid_enroll\", null);",
							"pm.globals.set(\"$p_guwid_check\", null);",
							"pm.globals.set(\"$p_guwid_purch\", null);",
							"",
							"",
							"",
							"",
							"pm.globals.set(\"$pares\", null);",
							"pm.globals.set(\"$pareq\", null);",
							"pm.globals.set(\"$acs_url\", null);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "4cHLRE-Q7YcAP",
							"type": "string"
						},
						{
							"key": "username",
							"value": "515225-GetnetEuropeTEST",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "Basic ODQzMjAtZ2V0bmV0ZXVyb3BlOjJOUUJudWNVMTltWQ=="
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "text/xml"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<payment xmlns=\"http://www.elastic-payments.com/schema/payment\">\n    <merchant-account-id>5c4a8a42-04a8-4970-a595-262f0ba0a108</merchant-account-id>\n    <request-id>{{$guid}}</request-id>\n    <transaction-type>check-enrollment</transaction-type>\n    <requested-amount currency=\"EUR\">10.00</requested-amount>\n    <notifications format=\"application/json\">\n        <notification url=\"https://www.webhook.site/68f1326e-311d-4ef8-a998-1c3c66cc497a\"></notification>\n    </notifications>\n    <account-holder>\n        <first-name>Manon</first-name>\n        <last-name>Mertens</last-name>\n        <email>m.mertens@example.com</email>\n        <phone>+3228089336</phone>\n        <mobile-phone>+32496000000</mobile-phone>\n        <address>\n            <street1>Rue de la Loi 1</street1>\n            <city>Brussels</city>\n            <state>BRU</state>\n            <country>BE</country>\n            <postal-code>1000</postal-code>\n        </address>\n        <cancel-redirect-url>https://demoshop-test.getneteurope.com/demoshop/#/cancel</cancel-redirect-url>\n        <fail-redirect-url>https://demoshop-test.getneteurope.com/demoshop/#/error</fail-redirect-url>\n        <success-redirect-url>https://demoshop-test.getneteurope.com/demoshop/#/success</success-redirect-url>\n        <iso-transaction-type>01</iso-transaction-type>\n        <merchant-crm-id>XWLfrzuGhpajYxFiFgNScwcLhtIOvXNxMIcrxIPTHqgroaFiPNDqMxGBXYUhMVBZ</merchant-crm-id>\n        <account-info>\n            <authentication-method>01</authentication-method>\n            <authentication-timestamp>2019-05-05T21:46:00.000Z</authentication-timestamp>\n            <challenge-indicator>01</challenge-indicator>\n            <creation-date>2019-05-05Z</creation-date>\n            <update-date>2019-06-07Z</update-date>\n            <password-change-date>2019-06-08Z</password-change-date>\n            <shipping-address-first-use>2019-06-09Z</shipping-address-first-use>\n            <transactions-last-day>1</transactions-last-day>\n            <transactions-last-year>10</transactions-last-year>\n            <card-transactions-last-day>2</card-transactions-last-day>\n            <purchases-last-six-months>4</purchases-last-six-months>\n            <suspicious-activity>false</suspicious-activity>\n            <card-creation-date>2018-06-16Z</card-creation-date>\n        </account-info>\n    </account-holder>\n    <shipping>\n        <first-name>Manon</first-name>\n        <last-name>Mertens</last-name>\n        <address>\n            <street1>Rue de la Loi 1</street1>\n            <city>Brussels</city>\n            <state>BRU</state>\n            <country>BE</country>\n            <postal-code>1000</postal-code>\n        </address>\n        <shipping-method>home_delivery</shipping-method>\n    </shipping>\n    <card>\n        <account-number>5413330300201192</account-number>\n        <expiration-month>01</expiration-month>\n        <expiration-year>2025</expiration-year>\n        <card-security-code>192</card-security-code>\n        <card-type>mastercard</card-type>\n        <account-type>02</account-type>\n    </card>\n    <three-d>\n        <version>2.1.0</version>\n    </three-d>\n    <ip-address>127.0.0.1</ip-address>\n    <order-detail>{{$handler}}</order-detail>\n    <descriptor>{{$descriptor}}</descriptor>\n    <payment-methods>\n        <payment-method name=\"creditcard\"/>\n    </payment-methods>\n    <device>\n        <render-options>\n            <interface>01</interface>\n            <ui-type>01</ui-type>\n        </render-options>\n    </device>\n    <browser>\n        <time-zone>360</time-zone>\n        <screen-resolution>800x600</screen-resolution>\n        <challenge-window-size>01</challenge-window-size>\n        <color-depth>48</color-depth>\n        <java-enabled>true</java-enabled>\n        <language>en</language>\n    </browser>\n    <risk-info>\n        <availability>01</availability>\n        <delivery-mail>m.mertens@example.com</delivery-mail>\n        <delivery-timeframe>04</delivery-timeframe>\n        <gift>\n            <gift-card id=\"09754139-a2db-48c0-af1b-c89c4a31b645\">\n                <amount currency=\"EUR\">9.99</amount>\n            </gift-card>\n        </gift>\n        <preorder-date>2019-07-16Z</preorder-date>\n        <reorder-items>01</reorder-items>\n    </risk-info>\n</payment>"
				},
				"url": {
					"raw": "https://api-test.getneteurope.com/engine/rest/payments/",
					"protocol": "https",
					"host": [
						"api-test",
						"getneteurope",
						"com"
					],
					"path": [
						"engine",
						"rest",
						"payments",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "1.2.a.i.2 Webhook",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"responseHTML = cheerio(pm.response.text()); console.log(responseHTML.find('[name=\"PaRes\"]').val());\r",
							"pm.globals.set(\"$pares\", responseHTML.find('[name=\"PaRes\"]').val());\r",
							"\r",
							"console.log(\"PARES: \"+responseHTML.find('[name=\"PaRes\"]').val());\r",
							"\r",
							"pm.test(\"Consumer Redirect with ACS URL and PARES\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"PARES: \"+pm.globals.get(\"$pares\"), function(){\r",
							"        pm.expect(pm.globals.get(\"$pares\")).not.equal(null);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": " Basic NzAwMDAtQVBJTFVITi1DQVJEOjhtaHdhdktWYjkxVA=="
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "PaReq",
							"value": "{{$pareq}}",
							"type": "text"
						},
						{
							"key": "TermUrl",
							"value": "http://www.webhook.site/68f1326e-311d-4ef8-a998-1c3c66cc497a",
							"type": "text"
						},
						{
							"key": "MD",
							"value": "Manon Mertens",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{$acs_url}}",
					"host": [
						"{{$acs_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.2.a.i.3 Check-Payer-Response",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var guid = (function() {\r",
							"  function s4() {\r",
							"    return Math.floor((1 + Math.random()) * 0x10000)\r",
							"               .toString(16)\r",
							"               .substring(1);\r",
							"  }\r",
							"  return function() {\r",
							"    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\r",
							"           s4() + '-' + s4() + s4() + s4();\r",
							"  };\r",
							"})();\r",
							"\r",
							"pm.globals.set(\"$descriptor\", \"3DS-2 Use-Cases: One-Time Purchase - Simplified\");\r",
							"pm.globals.set(\"$guid\", guid());\r",
							"console.info(\"UUID: \"+pm.globals.get(\"$guid\"));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Convert XML output to JSON format",
							"var xml2JsonData = xml2Json(responseBody);",
							"",
							"var xml = cheerio.load(responseBody, {",
							"  ignoreWhitespace: true,",
							"  xmlMode: true",
							"});",
							"",
							"pm.globals.set(\"$p_guwid_check\", xml(\"payment\").find(\"transaction-id\").text());",
							"",
							"console.info(\"CheckPayerResponse GUWID: \"+xml(\"payment\").find(\"transaction-id\").text());",
							"console.info(\"Authenticated: \"+xml(\"payment\").find(\"three-d\").find(\"cardholder-authentication-status\").text());",
							"console.info(\"3DSV: \"+xml(\"payment\").find(\"three-d\").find(\"version\").text());",
							"console.info(\"ECI: \"+xml(\"payment\").find(\"three-d\").find(\"eci\").text());",
							"console.info(\"CAVV: \"+xml(\"payment\").find(\"three-d\").find(\"cardholder-authentication-value\").text());",
							"console.info(\"DSTranID: \"+xml(\"payment\").find(\"three-d\").find(\"ds-transaction-id\").text());",
							"",
							"var $status=xml(\"payment\").find(\"transaction-state\").text();",
							"",
							"pm.test(\"Check Payer Response\", function(){",
							"    pm.expect($status).to.equal(\"success\"); ",
							"});",
							"",
							"pm.test(\"Check Payer Response Transaction ID: \"+pm.globals.get(\"$p_guwid_check\"), function(){",
							"    pm.expect(pm.globals.get(\"$p_guwid_check\")).not.equal(null);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "4cHLRE-Q7YcAP",
							"type": "string"
						},
						{
							"key": "username",
							"value": "515225-GetnetEuropeTEST",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": " Basic NzAwMDAtQVBJTFVITi1DQVJEOjhtaHdhdktWYjkxVA=="
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "text/xml"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<payment xmlns=\"http://www.elastic-payments.com/schema/payment\">\n    <merchant-account-id>5c4a8a42-04a8-4970-a595-262f0ba0a108</merchant-account-id>\n    <request-id>{{$guid}}</request-id>\n    <transaction-type>check-payer-response</transaction-type>\n    <parent-transaction-id>{{$p_guwid_enroll}}</parent-transaction-id>\n    <three-d>\n        <pares>{{$pares}}</pares>\n        <version>2.1</version>\n    </three-d>\n    <order-detail>{{$handler}}</order-detail>\n    <descriptor>{{$descriptor}}</descriptor>\n</payment>"
				},
				"url": {
					"raw": "https://api-test.getneteurope.com/engine/rest/payments/",
					"protocol": "https",
					"host": [
						"api-test",
						"getneteurope",
						"com"
					],
					"path": [
						"engine",
						"rest",
						"payments",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "1.2.a.ii Purchase",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Convert XML output to JSON format\r",
							"var xml2JsonData = xml2Json(responseBody);\r",
							"\r",
							"var xml = cheerio.load(responseBody, {\r",
							"  ignoreWhitespace: true,\r",
							"  xmlMode: true\r",
							"});\r",
							"\r",
							"\r",
							"console.info(\"Purchase GUWID: \"+xml(\"payment\").find(\"transaction-id\").text());\r",
							"\r",
							"\r",
							"var $status=xml(\"payment\").find(\"transaction-state\").text();\r",
							"pm.globals.set(\"$p_guwid_auth_1\", xml(\"payment\").find(\"transaction-id\").text());\r",
							"\r",
							"\r",
							"pm.test(\"Purchase Transaction\", function(){\r",
							"    pm.expect($status).to.equal(\"success\"); \r",
							"});\r",
							"\r",
							"pm.test(\"Purchase Transaction ID: \"+pm.globals.get(\"$p_guwid_auth_1\"), function(){\r",
							"    pm.expect(pm.globals.get(\"$p_guwid_auth_1\")).not.equal(null);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var guid = (function() {\r",
							"  function s4() {\r",
							"    return Math.floor((1 + Math.random()) * 0x10000)\r",
							"               .toString(16)\r",
							"               .substring(1);\r",
							"  }\r",
							"  return function() {\r",
							"    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\r",
							"           s4() + '-' + s4() + s4() + s4();\r",
							"  };\r",
							"})();\r",
							"\r",
							"pm.globals.set(\"$descriptor\", \"3DS-2 Use-Cases: One-Time Purchase - Simplified\");\r",
							"pm.globals.set(\"$guid\", guid());\r",
							"pm.globals.set(\"$handler\", \"Order0000001701\");\r",
							"console.info(\"UUID: \"+pm.globals.get(\"$guid\"));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "4cHLRE-Q7YcAP",
							"type": "string"
						},
						{
							"key": "username",
							"value": "515225-GetnetEuropeTEST",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": " Basic NzAwMDAtQVBJTFVITi1DQVJEOjhtaHdhdktWYjkxVA=="
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/xml"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<payment xmlns=\"http://www.elastic-payments.com/schema/payment\">\n    <merchant-account-id>5c4a8a42-04a8-4970-a595-262f0ba0a108</merchant-account-id>\n    <request-id>{{$guid}}</request-id>\n    <transaction-type>purchase</transaction-type>\n    <requested-amount currency=\"EUR\">10.00</requested-amount>\n    <parent-transaction-id>{{$p_guwid_check}}</parent-transaction-id>\n    <order-detail>{{$handler}}</order-detail>\n    <descriptor>{{$descriptor}}</descriptor>\n</payment>",
					"options": {
						"raw": {
							"language": "xml"
						}
					}
				},
				"url": {
					"raw": "https://api-test.getneteurope.com/engine/rest/payments/",
					"protocol": "https",
					"host": [
						"api-test",
						"getneteurope",
						"com"
					],
					"path": [
						"engine",
						"rest",
						"payments",
						""
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "",
				"type": "string"
			},
			{
				"key": "username",
				"value": "",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}
